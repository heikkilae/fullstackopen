{"version":3,"sources":["services/persons.js","components/FilterForm.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","persons","getAll","axios","get","then","response","data","create","newObject","post","remove","id","delete","FilterForm","filter","handleFilterChange","value","onChange","PersonForm","newName","handleNewName","newNumber","handleNewNumber","handleSubmit","type","onClick","Persons","deleteHandler","map","person","name","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setPersons","setNewName","setNewNumber","setFilter","notification","setNotification","useEffect","personsService","console","log","length","filteredPersons","toLocaleLowerCase","includes","event","target","preventDefault","find","window","alert","newPerson","number","createdPerson","concat","setTimeout","desiredPersonToDelete","confirm","res","p","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0417263b.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    // Get promise into request variable\r\n    const request = axios.get(baseUrl)\r\n\r\n    // Return response.data\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response)\r\n}\r\n\r\nconst persons = {\r\n    getAll: getAll,\r\n    create: create,\r\n    remove: remove\r\n}\r\n\r\nexport default persons","import React from 'react'\r\n\r\nconst FilterForm = ({ filter, handleFilterChange }) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input value={filter} onChange={handleFilterChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterForm","import React from \"react\";\r\n\r\nconst PersonForm = ({ newName, handleNewName, newNumber, handleNewNumber, handleSubmit }) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNewName} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNewNumber} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" onClick={handleSubmit}>add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from \"react\";\r\n\r\nconst Persons = ({ persons, deleteHandler }) => {\r\n    return (\r\n        <div>\r\n            {persons.map((person) => {\r\n                return (\r\n                    <div key={person.id}>\r\n                        <p > \r\n                            {person.name}\r\n                            <button onClick={() => deleteHandler(person.id)}> \r\n                                delete \r\n                            </button>\r\n                        </p> \r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","const Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n\r\n    // Style object\r\n    const style = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n    }\r\n  \r\n    return (\r\n      <div style={style}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons.js'\nimport FilterForm from './components/FilterForm'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    personsService.getAll()\n    .then(persons => {\n      setPersons(persons)\n    })\n\n  },[])\n  console.log('render', persons.length, 'persons')\n\n  const filteredPersons = persons.filter(person => {\n    return person.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n  })\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    if (persons.find(person => person.name === newName)) {\n      window.alert(`${newName} is already added to phonebook`)\n      return\n    }\n    const newPerson = { name: newName, number: newNumber }\n    personsService.create(newPerson).then(createdPerson => {\n      setPersons(persons.concat(createdPerson))\n      setNewName('')\n      setNewNumber('')\n      \n      // Notify user\n      setNotification(`Added ${createdPerson.name}`)\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n    })\n  }\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handleDelete = id => {\n    const desiredPersonToDelete = persons.find(person => person.id === id)\n    console.log(`You are about to delete ${desiredPersonToDelete.name}`)\n    if (window.confirm(`Delete ${desiredPersonToDelete.name}?`)) {\n      personsService.remove(id).then(res => {\n        setPersons(persons.filter(p => p.id !== id))\n\n        // Notify user\n        setNotification(`Removed ${desiredPersonToDelete.name}`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n      })\n      .catch(error => {\n        alert(\n          `Cannot remove '${desiredPersonToDelete.name}' since not found from server`\n        )\n        setPersons(persons.filter(p => p.id !== id))\n      })\n    }\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <FilterForm filter={filter} handleFilterChange={handleFilterChange} />\n      \n      <h3>Add a new</h3>\n      <PersonForm newName={newName} \n                  handleNewName={handleNewName} \n                  newNumber={newNumber} handleNewNumber={handleNewNumber} \n                  handleSubmit={handleSubmit} />\n                  \n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} deleteHandler={handleDelete}/>\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}